q
new_hash
s
new_hash[language][:style] << style
new_hash[language][:style]
new_hash
q
new_hash.include?(language)
new_hash[language].include?(language)
language
s
language
s
language
s
new_hash[language].include?(language)
new_hash
new_hash[:javascript].nil?
q
new_hash
language
s
language
s
language
s
language
s
language
new_hash
style
quit
new_hash[language][:style] << :test
new_hash
new_hash[language][:style] << "test"
new_hash
new_hash[language][:style] = [style]
new_hash
q
new_hash
new_hash[language][:style] = [] << style
new_hash
new_hash[language][:style] = style
style
new_hash
new_hash[language] = type
s
lang
style
q
hash
hash[language] = type
hash = Hash.new(:style[])
hash
hash = Hash.new(:style)
new_hash
new_hash[language][styles] = []
new_hash
new_hash[language] = type
styles
value
key
s
type
language
quit
new_hash[language][:style] = []
new_hash[language] = {type,:style}
new_hash[language] = {type,:style=[]<<style}
new_hash[language] = {type,:style[style]}
new_hash
new_hash[language] = type
new_hash[language] = type,:style
new_hash[language] = type,:style => [style]
new_hash[language] = type,[style]
new_hash[language] = type,style
new_hash
new_hash[language] = type
value
key
s
type
language
lang
style
